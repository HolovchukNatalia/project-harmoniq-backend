{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "Harmoniq",
    "license": {
      "name": "Apache 2.0",
      "url": "<http://www.apache.org/licenses/LICENSE-2.0.html>"
    },
    "description": "Documentation of Harmoniq service"
  },
  "servers": [
    {
      "url": "https://project-harmoniq-backend.onrender.com"
    },
    {
      "url": "http://localhost:3000"
    }
  ],
  "tags": [
    {
      "name": "Articles",
      "description": "Operations about articles."
    },
    {
      "name": "Authorization",
      "description": "Authorization operations."
    },
    {
      "name": "Users",
      "description": "Operations about users."
    }
  ],
  "paths": {
    "/articles": {
      "get": {
        "tags": [
          "Articles"
        ],
        "summary": "Get a whole list of articles",
        "operationId": "getAllArticles",
        "description": "Get list of all articles with this endpoint",
        "security": [],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            },
            "example": 1
          },
          {
            "in": "query",
            "name": "perPage",
            "schema": {
              "type": "integer",
              "example": 5
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved articles",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "articles",
                    "paginationData"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully retrieved articles"
                    },
                    "articles": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/article"
                      }
                    },
                    "paginationData": {
                      "type": "object",
                      "$ref": "#/components/schemas/pagination"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Articles"
        ],
        "summary": "Create article",
        "operationId": "createArticle",
        "description": "Create an article with payload",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "image",
                  "title",
                  "desc",
                  "article",
                  "date",
                  "ownerId"
                ],
                "properties": {
                  "_id": {
                    "description": "Article's id",
                    "type": "string",
                    "example": "68855dd9f76d12b4e738412e"
                  },
                  "image": {
                    "description": "Article's image",
                    "type": "string",
                    "example": "https://ftp.goit.study/img/harmoniq/f12e886489f94b5886d03e95vn.jpg"
                  },
                  "title": {
                    "description": "Article's title",
                    "type": "string",
                    "minLength": 5,
                    "maxLength": 100,
                    "example": "Коли тривога заповнює простір: шлях до спокою"
                  },
                  "desc": {
                    "description": "Article's description",
                    "type": "string",
                    "minLength": 5,
                    "maxLength": 100,
                    "example": "Медитації, які допомагають відновити внутрішній спокій"
                  },
                  "article": {
                    "description": "Main Article's part",
                    "type": "string",
                    "minLength": 100,
                    "example": "У кожного з нас бувають моменти, коли тривога наче туман огортає думки, не даючи побачити ясне небо. Це відчуття ніби нескінченний внутрішній шум, який здається нестерпним і безвихідним. Однак саме у такі миті ми особливо гостро потребуємо заземлення, повернення до себе і пошуку свого внутрішнього центру. Ця стаття — про те, як упізнати тривогу і почати рухатися до спокою через прості, але ефективні практики. Тривога — це..."
                  },
                  "rate": {
                    "description": "Article's rating",
                    "type": "number",
                    "default": 0,
                    "example": 16
                  },
                  "date": {
                    "description": "Article's publishing date",
                    "type": "string",
                    "example": "2025-03-27T00:00:00.000Z"
                  },
                  "ownerId": {
                    "description": "Article owner's id",
                    "type": "string",
                    "example": "68855485f76d12b4e7384005"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully created an article!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfuly created an article!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/newArticle"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/articles/{articleId}": {
      "get": {
        "tags": [
          "Articles"
        ],
        "summary": "Get a single article by id",
        "operationId": "getArticleById",
        "description": "Get an article by id",
        "security": [],
        "parameters": [
          {
            "in": "path",
            "name": "articleId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "6687bd0b07d349529f997ba9"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully found article with id {articleId}!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "article"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found article with id 68855dd9f76d12b4e7384136!"
                    },
                    "article": {
                      "type": "object",
                      "$ref": "#/components/schemas/article"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      },
      "delete": {
        "tags": [
          "Articles"
        ],
        "summary": "Delete an article by Id",
        "operationId": "deleteArticle",
        "description": "Delete an article by Id",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "articleId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "6687bd0b07d349529f997ba9"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/articles/popular": {
      "get": {
        "tags": [
          "Articles"
        ],
        "summary": "Get a list of most popular articles",
        "operationId": "getPopularArticlesService",
        "description": "Get a list of most popular articles",
        "security": [],
        "parameters": [
          {
            "in": "query",
            "description": "How much popular articles should be shown",
            "name": "limit",
            "required": true,
            "schema": {
              "type": "string",
              "example": "10"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Top {limit} popular articles",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Top 5 popular articles"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "articles": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/article"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "tags": [
          "Authorization"
        ],
        "summary": "User Registration",
        "operationId": "registerUserService",
        "description": "Register a new user with email and password",
        "security": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "email",
                  "password"
                ],
                "properties": {
                  "name": {
                    "description": "User's name",
                    "minLength": 2,
                    "maxLength": 32,
                    "type": "string",
                    "example": "User228"
                  },
                  "email": {
                    "description": "User's email",
                    "type": "string",
                    "maxLength": 64,
                    "format": "email",
                    "example": "user@example.com"
                  },
                  "password": {
                    "description": "User's password",
                    "type": "string",
                    "minLength": 8,
                    "maxLength": 64,
                    "format": "password",
                    "example": "password123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully registered a user!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully registered a user!"
                    },
                    "data": {
                      "$ref": "#/components/schemas/auth"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "example": "Validation Error"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "field",
                        "message"
                      ],
                      "properties": {
                        "field": {
                          "type": "string",
                          "example": "email"
                        },
                        "message": {
                          "type": "string",
                          "example": "Email is required"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "409": {
            "$ref": "#/components/responses/409"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "Authorization"
        ],
        "summary": "User Login",
        "operationId": "loginUser",
        "description": "Log in a user with email and password",
        "security": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "description": "User's email",
                    "type": "string",
                    "maxLength": 64,
                    "format": "email",
                    "example": "user@example.com"
                  },
                  "password": {
                    "description": "User's password",
                    "type": "string",
                    "minLength": 8,
                    "maxLength": 64,
                    "format": "password",
                    "example": "password123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully logged in an user!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully logged in an user!"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "accessToken"
                      ],
                      "properties": {
                        "accessToken": {
                          "type": "string",
                          "example": "Bearer token_string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "example": "Validation Error"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "field",
                        "message"
                      ],
                      "properties": {
                        "field": {
                          "type": "string",
                          "example": "email"
                        },
                        "message": {
                          "type": "string",
                          "example": "Email is required"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "User or password doesn`t match",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "example": "User or password doesn`t match"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": [
          "Authorization"
        ],
        "summary": "User Logout",
        "operationId": "logoutUser",
        "description": "Log out a user by clearing session cookies",
        "security": [],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/auth/refresh": {
      "post": {
        "tags": [
          "Authorization"
        ],
        "summary": "Refresh User session",
        "operationId": "refreshSession",
        "description": "Refresh the user session and get a new access token",
        "security": [],
        "responses": {
          "200": {
            "description": "Successfully refreshed a session!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully refreshed a session!"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "accessToken"
                      ],
                      "properties": {
                        "accessToken": {
                          "type": "string",
                          "example": "Bearer token_string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get a whole list of users",
        "operationId": "allUsersInfoService",
        "description": "Get a whole list of all users with this endpoint",
        "security": [],
        "responses": {
          "200": {
            "description": "Users retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "users"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Users retrieved successfully"
                    },
                    "users": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/user"
                      }
                    },
                    "paginationData": {
                      "type": "object",
                      "$ref": "#/components/schemas/pagination"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{userId}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get a single user by id",
        "operationId": "userInfoService",
        "description": "Get a user by id",
        "security": [],
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "68855485f76d12b4e7384005"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User with {userId} successfully found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "user",
                    "userArticles"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "User with 68855485f76d12b4e7384005 successfully found"
                    },
                    "user": {
                      "type": "object",
                      "$ref": "#/components/schemas/user"
                    },
                    "userArticles": {
                      "description": "How much and what articles have been created by the user",
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/article"
                      }
                    },
                    "savedArticles": {
                      "description": "How much of which articles have been saved by the user",
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/article"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 404
                    },
                    "message": {
                      "type": "string",
                      "example": "User not found"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Users"
        ],
        "summary": "Update user by id",
        "operationId": "cleanUser",
        "description": "Update user by id",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "6687bd0b07d349529f997ba9"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Contact's name",
                    "minLength": 2,
                    "maxLength": 32,
                    "type": "string",
                    "example": "Valera"
                  },
                  "saved": {
                    "description": "Contact's saved-array",
                    "type": "array",
                    "items": {
                      "example": [
                        "6687bd0b07d349529f997ba9",
                        "2466h34534b37392003ba11s"
                      ]
                    }
                  },
                  "avatarUrl": {
                    "description": "Contact's avatar URL",
                    "type": "string",
                    "example": "https://ftp.goit.study/img/harmoniq/users/6881563901add19ee16fd00a.webp"
                  },
                  "articlesAmount": {
                    "description": "Contact's article amount",
                    "minLength": 0,
                    "type": "number",
                    "example": 10
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully updated user profile",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully updated user profile"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "user": {
                          "$ref": "#/components/schemas/user"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/users/{userId}/save/{articleId}": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Save an article for a user by Ids",
        "operationId": "saveArticleToUserServise",
        "description": "Save an article for a logged-in user by Ids",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "6885f9804c4583960e7188e7"
            }
          },
          {
            "in": "path",
            "name": "articleId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "68855dd9f76d12b4e738416a"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Article successfully saved",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Article successfully saved"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "description": "Article already saved",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 409
                    },
                    "message": {
                      "type": "string",
                      "example": "Article already saved"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Delete an article from a user by Ids",
        "operationId": "deleteArticleFromUserService",
        "description": "Delete an article from a logged-in user by Ids",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "6885f9804c4583960e7188e7"
            }
          },
          {
            "in": "path",
            "name": "articleId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "68855dd9f76d12b4e738416a"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Article successfully removed from saved",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Article successfully removed from saved"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 403
                    },
                    "message": {
                      "type": "string",
                      "example": "You are not allowed to delete article from another user"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Article not found in saved",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 404
                    },
                    "message": {
                      "type": "string",
                      "example": "Article not found in saved"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/popular": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get a list of most popular users",
        "operationId": "getPopularUsers",
        "description": "Get a list of most popular articles by articlesAmount",
        "security": [],
        "parameters": [
          {
            "in": "query",
            "description": "How much popular users should be shown",
            "name": "limit",
            "required": true,
            "schema": {
              "type": "string",
              "example": "10"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Top {limit} users sorted by articlesAmount",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Top 5 users sorted by articlesAmount"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "users": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/user"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "article": {
        "type": "object",
        "required": [
          "_id",
          "img",
          "title",
          "desc",
          "article",
          "rate",
          "date",
          "ownerId"
        ],
        "properties": {
          "_id": {
            "description": "Article's id",
            "type": "string",
            "example": "68855dd9f76d12b4e738412e"
          },
          "img": {
            "description": "Article's image",
            "type": "string",
            "example": "https://ftp.goit.study/img/harmoniq/f12e886489f94b5886d03e95vn.jpg"
          },
          "title": {
            "description": "Article's title",
            "type": "string",
            "example": "Коли тривога заповнює простір: шлях до спокою"
          },
          "desc": {
            "description": "Article's description",
            "type": "string",
            "example": "Медитації, які допомагають відновити внутрішній спокій"
          },
          "article": {
            "description": "Main Article's part",
            "type": "string",
            "example": "Тривога — це відчуття, яке всі ми час від часу переживаємо. Вона може проявлятися як невизначене занепокоєння, підсилене серцебиття або внутрішня напруга, що не дає спокою. Коли тривога заповнює наш внутрішній простір, здається, що неможливо знайти затишок навіть у найпростіших моментах життя. Проте важливо пам’ятати, що це не кінець і не вирок. Шлях до спокою доступний кожному, і він часто починається з усвідомленого ставлення до себе і свого стану. /n Розпочати цей шлях можна з простих, але ефективних методів, що допомагають повернути контроль над власними емоціями. Одним із таких є усвідомлене дихання. Коли тривога з’являється, наше дихання часто стає поверхневим і прискореним, що лише підсилює напругу. Зосередившись на глибоких, повільних вдихах і видихах, можна стабілізувати роботу нервової системи і зменшити інтенсивність тривожних відчуттів. Наприклад, техніка «4-7-8» передбачає вдих на рахунок чотири, затримку дихання на сім секунд та повільний видих на вісім. Практикуючи таке дихання регулярно, ви не лише швидко полегшите стан у момент тривоги, а й з часом навчитеся реагувати на стрес більш спокійно. /n Іншим важливим інструментом є ведення щоденника. Записування своїх думок і емоцій допомагає краще їх усвідомити і впорядкувати. Часто тривога живиться хаотичними, негативними припущеннями і сценаріями майбутнього, які виникають у нашій уяві. Коли ви викладаєте ці думки на папір, вони втрачають свою силу та стають більш зрозумілими. У щоденнику можна не лише описувати тривожні переживання, але й відмічати моменти спокою, вдячності, успіху — це допомагає збалансувати емоційний фон і побачити, що життя не складається лише з напруги. /n Практики майндфулнес також є надзвичайно корисними у боротьбі з тривогою. Вони вчать зупинятися у теперішньому моменті, звертати увагу на свої відчуття, думки і навколишнє середовище без осуду. Це ніби тренування для розуму, яке дозволяє не зациклюватися на тривожних прогнози або внутрішніх образах. Навіть короткі паузи протягом дня, коли ви усвідомлено звертаєте увагу на те, що відбувається навколо — спів птахів, відчуття землі під ногами, смак кави — допомагають відновити внутрішню рівновагу і знижують надлишкову напругу. /n Когнітивно-поведінкова терапія (КПТ) пропонує важливий підхід до розуміння і трансформації тривоги. В її основі лежить ідея, що саме наші думки формують емоції і поведінку. Коли ми вчимося помічати автоматичні негативні думки і ставити їх під сумнів, тривога починає поступово відступати. Наприклад, замість думки «Я не впораюся», варто спробувати замінити її на запитання «Чи є докази того, що я вже не був у складних ситуаціях і успішно їх вирішував?». Такі внутрішні діалоги сприяють формуванню більш конструктивного й чутливого ставлення до себе. /n Підсумовуючи, варто наголосити, що тривога — це природна реакція організму, але вона не повинна визначати повністю наше життя. Крок за кроком, з використанням різних методів усвідомленого дихання, ведення щоденника, практик майндфулнес і когнітивних технік, можна навчитися знаходити внутрішній спокій навіть у моменти напруги. Пам’ятайте: турбота про себе не менш важлива, ніж будь-які інші справи. Дозвольте собі проходити цей шлях з ніжністю і терпінням, а ваша внутрішня сила зробить решту. /n Ви не самі, і кожен крок у напрямку до спокою — це вже перемога."
          },
          "rate": {
            "description": "Article's rating",
            "type": "number",
            "example": 16
          },
          "date": {
            "description": "Article's publishing date",
            "type": "string",
            "example": "2025-03-27T00:00:00.000Z"
          },
          "ownerId": {
            "description": "Article owner's id",
            "type": "string",
            "example": "68855485f76d12b4e7384005"
          }
        }
      },
      "pagination": {
        "type": "object",
        "required": [
          "page",
          "perPage",
          "totalItems",
          "totalPages",
          "hasNextPage",
          "hasPreviousPage"
        ],
        "properties": {
          "page": {
            "type": "number",
            "example": 1
          },
          "perPage": {
            "type": "number",
            "example": 12
          },
          "totalItems": {
            "type": "number",
            "example": 208
          },
          "totalPages": {
            "type": "number",
            "example": 18
          },
          "hasNextPage": {
            "type": "boolean",
            "example": true
          },
          "hasPreviousPage": {
            "type": "boolean",
            "example": false
          }
        }
      },
      "newArticle": {
        "type": "object",
        "required": [
          "_id",
          "image",
          "title",
          "desc",
          "article",
          "rate",
          "date",
          "ownerId"
        ],
        "properties": {
          "_id": {
            "description": "Article's id",
            "type": "string",
            "example": "68855dd9f76d12b4e738412e"
          },
          "image": {
            "description": "Article's image",
            "type": "string",
            "example": "https://ftp.goit.study/img/harmoniq/f12e886489f94b5886d03e95vn.jpg"
          },
          "title": {
            "description": "Article's title",
            "type": "string",
            "example": "Коли тривога заповнює простір: шлях до спокою"
          },
          "desc": {
            "description": "Article's description",
            "type": "string",
            "example": "Медитації, які допомагають відновити внутрішній спокій"
          },
          "article": {
            "description": "Main Article's part",
            "type": "string",
            "example": "Тривога — це відчуття, яке всі ми час від часу переживаємо. Вона може проявлятися як невизначене занепокоєння, підсилене серцебиття або внутрішня напруга, що не дає спокою. Коли тривога заповнює наш внутрішній простір, здається, що неможливо знайти затишок навіть у найпростіших моментах життя. Проте важливо пам’ятати, що це не кінець і не вирок. Шлях до спокою доступний кожному, і він часто починається з усвідомленого ставлення до себе і свого стану. /n Розпочати цей шлях можна з простих, але ефективних методів, що допомагають повернути контроль над власними емоціями. Одним із таких є усвідомлене дихання. Коли тривога з’являється, наше дихання часто стає поверхневим і прискореним, що лише підсилює напругу. Зосередившись на глибоких, повільних вдихах і видихах, можна стабілізувати роботу нервової системи і зменшити інтенсивність тривожних відчуттів. Наприклад, техніка «4-7-8» передбачає вдих на рахунок чотири, затримку дихання на сім секунд та повільний видих на вісім. Практикуючи таке дихання регулярно, ви не лише швидко полегшите стан у момент тривоги, а й з часом навчитеся реагувати на стрес більш спокійно. /n Іншим важливим інструментом є ведення щоденника. Записування своїх думок і емоцій допомагає краще їх усвідомити і впорядкувати. Часто тривога живиться хаотичними, негативними припущеннями і сценаріями майбутнього, які виникають у нашій уяві. Коли ви викладаєте ці думки на папір, вони втрачають свою силу та стають більш зрозумілими. У щоденнику можна не лише описувати тривожні переживання, але й відмічати моменти спокою, вдячності, успіху — це допомагає збалансувати емоційний фон і побачити, що життя не складається лише з напруги. /n Практики майндфулнес також є надзвичайно корисними у боротьбі з тривогою. Вони вчать зупинятися у теперішньому моменті, звертати увагу на свої відчуття, думки і навколишнє середовище без осуду. Це ніби тренування для розуму, яке дозволяє не зациклюватися на тривожних прогнози або внутрішніх образах. Навіть короткі паузи протягом дня, коли ви усвідомлено звертаєте увагу на те, що відбувається навколо — спів птахів, відчуття землі під ногами, смак кави — допомагають відновити внутрішню рівновагу і знижують надлишкову напругу. /n Когнітивно-поведінкова терапія (КПТ) пропонує важливий підхід до розуміння і трансформації тривоги. В її основі лежить ідея, що саме наші думки формують емоції і поведінку. Коли ми вчимося помічати автоматичні негативні думки і ставити їх під сумнів, тривога починає поступово відступати. Наприклад, замість думки «Я не впораюся», варто спробувати замінити її на запитання «Чи є докази того, що я вже не був у складних ситуаціях і успішно їх вирішував?». Такі внутрішні діалоги сприяють формуванню більш конструктивного й чутливого ставлення до себе. /n Підсумовуючи, варто наголосити, що тривога — це природна реакція організму, але вона не повинна визначати повністю наше життя. Крок за кроком, з використанням різних методів усвідомленого дихання, ведення щоденника, практик майндфулнес і когнітивних технік, можна навчитися знаходити внутрішній спокій навіть у моменти напруги. Пам’ятайте: турбота про себе не менш важлива, ніж будь-які інші справи. Дозвольте собі проходити цей шлях з ніжністю і терпінням, а ваша внутрішня сила зробить решту. /n Ви не самі, і кожен крок у напрямку до спокою — це вже перемога."
          },
          "rate": {
            "description": "Article's rating",
            "type": "number",
            "example": 16
          },
          "date": {
            "description": "Article's publishing date",
            "type": "string",
            "example": "2025-03-27T00:00:00.000Z"
          },
          "ownerId": {
            "description": "Article owner's id",
            "type": "string",
            "example": "68855485f76d12b4e7384005"
          }
        }
      },
      "auth": {
        "type": "object",
        "required": [
          "id",
          "name",
          "email"
        ],
        "properties": {
          "id": {
            "description": "User's Id",
            "type": "string",
            "example": "6885f9804c4583960e7188e7"
          },
          "name": {
            "description": "User's name",
            "type": "string",
            "example": "User228"
          },
          "email": {
            "description": "User's email",
            "type": "string",
            "example": "user@example.com"
          }
        }
      },
      "user": {
        "type": "object",
        "required": [
          "_id",
          "name",
          "avatarUrl",
          "articlesAmount",
          "saved"
        ],
        "properties": {
          "_id": {
            "description": "User's Id",
            "type": "string",
            "example": "68855485f76d12b4e7384005"
          },
          "name": {
            "description": "User's name",
            "type": "string",
            "example": "User228"
          },
          "avatarUrl": {
            "description": "Url of User's avatar",
            "type": "string",
            "example": "https://ftp.goit.study/img/harmoniq/users/6881563901add19ee16fd041.webp"
          },
          "articlesAmount": {
            "description": "How much articles has a person created",
            "type": "number",
            "example": 2
          },
          "saved": {
            "description": "How much of which articles(shown in articleIds) have been saved by a person",
            "type": "array",
            "items": {
              "type": "string",
              "example": "68855dd9f76d12b4e7384185"
            }
          }
        }
      }
    },
    "responses": {
      "400": {
        "description": "Validation error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 401
                },
                "message": {
                  "type": "string",
                  "example": "Validation Error"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "field",
                    "message"
                  ],
                  "properties": {
                    "field": {
                      "type": "string",
                      "example": "date"
                    },
                    "message": {
                      "type": "string",
                      "example": "Date is required"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "401": {
        "description": "Unauthorized error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 401
                },
                "message": {
                  "type": "string",
                  "example": "UnauthorizedError"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Token expired"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "403": {
        "description": "Forbidden",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 403
                },
                "message": {
                  "type": "string",
                  "example": "You are not allowed to save article to another user"
                }
              }
            }
          }
        }
      },
      "404": {
        "description": "Article not found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 404
                },
                "message": {
                  "type": "string",
                  "example": "Article with id 68855dd9f76d12b4e738412e not found!"
                },
                "data": {
                  "type": "object",
                  "example": {}
                }
              }
            }
          }
        }
      },
      "409": {
        "description": "Email in use",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 409
                },
                "message": {
                  "type": "string",
                  "example": "Email in use"
                }
              }
            }
          }
        }
      }
    }
  }
}